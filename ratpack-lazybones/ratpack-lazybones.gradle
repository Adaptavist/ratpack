/*
 * Copyright 2013 the original author or authors.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

import org.apache.tools.ant.filters.ReplaceTokens

buildscript {
  repositories {
    maven { url "http://dl.bintray.com/pledbrook/plugins" }
  }

  dependencies {
    classpath "uk.co.cacoethes:lazybones-gradle:1.0.4"
  }
}

dependencies {
  compile "org.gradle:gradle-tooling-api:${gradle.gradleVersion}"

  testCompile "commons-io:commons-io:2.4"
  testCompile "org.apache.commons:commons-lang3:3.3.2"
}

apply from: "$rootDir/gradle/javaModule.gradle"
apply plugin: "lazybones-templates"

ext {
  generatedTestResourcesDir = file("$buildDir/generated-test-resources")
  compiledTemplateDir = file("$buildDir/lazybones-templates/ratpack")
}

task replaceTemplateTokens(type: Sync) {
  def tokens = [version: version]
  inputs.properties(tokens)

  from file("src/templates/ratpack")
  into compiledTemplateDir
  filter(ReplaceTokens, tokens: tokens)
}

lazybones {
  templateDirs = files(compiledTemplateDir)
  repositoryUrl = "https://api.bintray.com/content/ratpack/lazybones"
  repositoryUsername = project.hasProperty('ratpackBintrayUser') ? ratpackBintrayUser : ""
  repositoryApiKey = project.hasProperty('ratpackBintrayApiKey') ? ratpackBintrayApiKey : ""
  publish = true
}
//a nasty hack to keep gradle lazybones plugin happy, see https://github.com/pledbrook/lazybones/issues/126
compiledTemplateDir.mkdirs()
new File(compiledTemplateDir, 'VERSION').createNewFile()

packageTemplateRatpack {
  dependsOn test, replaceTemplateTokens
  it.doFirst {
    if (isSnapshot) {
      throw new GradleException("Cannot publish lazybones template with a snapshot version: $version")
    }
  }
}

class WriteTestConfig extends DefaultTask {

  @OutputFile
  File getTestConfigPropertiesFile() {
    new File(project.generatedTestResourcesDir, 'test-config.properties')
  }

  @Input
  Properties getTestConfigProperties() {
    def testConfigProperties = new Properties()
    testConfigProperties["template.path"] = project.compiledTemplateDir.absolutePath
    testConfigProperties["localRepo.url"] = project.localRepoUrl.toString()
    testConfigProperties
  }

  @TaskAction
  def generate() {
    testConfigPropertiesFile.withOutputStream { testConfigProperties.store(it, null) }
  }
}

task writeTestConfig(type: WriteTestConfig)

task prepareTestResources {
  dependsOn { apiModules*.install }
  dependsOn ":ratpack-gradle:install", replaceTemplateTokens, writeTestConfig
}

sourceSets.test.resources.srcDir generatedTestResourcesDir

processTestResources.dependsOn writeTestConfig
ideaModule.dependsOn prepareTestResources

test {
  inputs.dir compiledTemplateDir

  dependsOn prepareTestResources
}