/*
 * Copyright 2013 the original author or authors.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

buildscript {
  repositories {
    maven { url "http://dl.bintray.com/robfletcher/gradle-plugins" }
    jcenter()
    maven { url "https://oss.sonatype.org/content/repositories/snapshots" }
  }
  dependencies {
    classpath 'org.gradle.plugins:gradle-compass:1.0.9'
    classpath 'org.gebish:geb-gradle:0.9.2-SNAPSHOT'
  }
}

import org.gradle.plugins.javascript.coffeescript.CoffeeScriptCompile
import org.gradle.plugins.compass.*
import geb.gradle.saucelabs.SauceAccount

apply plugin: 'coffeescript-base'
apply plugin: 'compass'
apply plugin: "ratpack-groovy"
apply plugin: "geb-saucelabs"

repositories {
  jcenter()
  maven { url "http://repo.springsource.org/repo" } // for springloaded
  maven { url "http://repo.gradle.org/gradle/javascript-public/" } // for coffeescript plugin
  maven { url "http://repository-saucelabs.forge.cloudbees.com/release" }
  maven { url "https://oss.sonatype.org/content/repositories/snapshots/" } //for geb snapshots
}

configurations {
  latestManual {}
  browserTestCompile.extendsFrom testCompile
  browserTestRuntime.extendsFrom testRuntime
}

sourceSets {
  browserTest {
    resources.srcDir(file('src/ratpack'))
    compileClasspath += main.output
    runtimeClasspath += main.output
  }
}

dependencies {
  springloaded "org.springsource.springloaded:springloaded-core:1.1.1"
  compile project(":ratpack-groovy")
  testCompile project(":ratpack-groovy-test")
  testCompile commonDependencies.spock
  latestManual project(":ratpack-manual")

  browserTestCompile "org.gebish:geb-spock:0.9.2-SNAPSHOT"
  browserTestCompile "org.seleniumhq.selenium:selenium-remote-driver:2.35.0", {
    exclude module: 'guava'
  }
  sauceConnect "com.saucelabs:sauce-connect:3.0.28"
}

task gatherManuals(type: Sync) {
  inputs.files configurations.latestManual
  into "src/ratpack/public/manual"
  into version, {
    from { zipTree(configurations.latestManual.singleFile) }
  }
}

task prepareContent {
  dependsOn gatherManuals
}

processResources {
  inputs.property("currentVersion", version)
  def currentVersionsFile = file("src/main/resources/currentVersion.txt")
  outputs.file currentVersionsFile

  doFirst {
    currentVersionsFile.parentFile.mkdirs()
    currentVersionsFile.text = version
  }
}

run {
  dependsOn configureRun
}

task browserTest(type: Test) {
  enabled = false

  testClassesDir = sourceSets.browserTest.output.classesDir
  classpath = sourceSets.browserTest.runtimeClasspath
}

sauceLabs {
  browsers {
    chrome_linux
  }
  task {
    testClassesDir = browserTest.testClassesDir
    classpath = browserTest.classpath

    systemProperty 'ratpack.port', '5050'
  }
  account {
    username = System.getenv(SauceAccount.USER_ENV_VAR)
    accessKey = System.getenv(SauceAccount.ACCESS_KEY_ENV_VAR)
  }
}

installApp {
  dependsOn prepareContent
  from run.workingDir
}

task compileCoffee(type: CoffeeScriptCompile) {
  source fileTree('src/main/static/scripts')
  destinationDir file('src/ratpack/public/scripts')
}

processResources.inputs.files compileCoffee, compileSass, prepareContent

compass {
  gems = ["compass", "breakpoint"]
  cssDir = file('src/ratpack/public/styles')
  sassDir = file('src/main/static/styles')
  imagesDir = file('src/ratpack/public/images')
  importPath = files('../ratpack-stylesheets')
  quiet = true
}

compileSass {
  environment = 'production'
  debugInfo = false
}

clean.dependsOn cleanCompileSass
run.dependsOn watchSass
installApp.dependsOn compileSass

task createScriptsDir {
  doLast {
    mkdir "src/ratpack/public/scripts"
  }
}
configure([watchSass, compileSass]) {
  dependsOn createScriptsDir
}

clean.dependsOn cleanCompileCoffee
clean.dependsOn cleanGatherManuals

idea {
  module {
    testSourceDirs += sourceSets.browserTest.allSource.srcDirs
    scopes.TEST.plus += configurations.browserTestCompile
  }
}
