apply plugin: 'groovy'
apply plugin: 'maven'

group = 'com.augusttechgroup'
artifact = 'ratpack-plugin'
version = '0.5-SNAPSHOT'

repositories {
  mavenCentral()
}

configurations { 
  provided
}

dependencies {
  groovy 'org.codehaus.groovy:groovy:1.8.6'
  testCompile 'junit:junit:4.10'
  compile 'org.json:json:20090211'
  compile 'org.slf4j:slf4j-api:1.6.3'
  runtime 'org.slf4j:slf4j-simple:1.6.3'
  compile gradleApi()
/*
  compile(group: 'org.mortbay.jetty', name: 'jetty', version: '6.1.26') {
    exclude module: 'servlet-api'
  }

  compile(group: 'org.mortbay.jetty', name: 'jetty-util', version: '6.1.26') {
    exclude module: 'servlet-api'
  }
*/
}

jar {
  baseName = artifact
}

task sourceJar(type: Jar) {
  description = 'An archive of the source code for Maven Central'
  baseName = artifact
  classifier = 'sources'
  from sourceSets.main.groovy
}


task groovydocJar(type: Jar, dependsOn: groovydoc) {
  description = 'An archive of the GroovyDocs for Maven Central'
  baseName = artifact
  classifier = 'javadoc'
  from fileTree(groovydoc.destinationDir)
}



/*
idea {
  module {
    scopes.PROVIDED.plus += configurations.provided
  }
}

eclipse {
  classpath {
    plusConfigurations += configurations.provided
  }
}

war {
  webInf {
    from sourceSets.app.groovy
    into 'scripts'
  }
  webInf {
    from sourceSets.app.resources
    into 'classes'
  }
}
jettyRunWar {
  contextPath = '/'
  httpPort = 5000
}

jettyRun {
  jettyRun.scanTargets = [file(sourceSets.app.groovy)]
  webAppSourceDirectory = file("src/app/webapp")
  classpath += sourceSets.app.groovy + sourceSets.app.resources
  webXml = file("src/main/webapp/WEB-INF/web.xml")
  contextPath = '/'
  httpPort = 5000
}

task run(type: JavaExec) {
  main = 'com.bleedingwolf.ratpack.RatpackRunner'
  args = [ 'src/app/groovy/app.groovy' ]
  classpath(runtimeClasspath + configurations.provided)
}
*/

task wrapper(type: Wrapper) {
  gradleVersion = '1.0-milestone-8a'
}
